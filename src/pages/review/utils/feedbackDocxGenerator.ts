
import { Document, Paragraph, TextRun, HeadingLevel, AlignmentType, Table, TableRow, TableCell, BorderStyle } from "docx";
import { Feedback } from "../types";

export const generateFeedbackDocx = (feedback: Feedback) => {
  const doc = new Document({
    sections: [
      {
        properties: {},
        children: [
          // Title
          new Paragraph({
            text: "Resume Analysis Report",
            heading: HeadingLevel.TITLE,
            alignment: AlignmentType.CENTER,
            spacing: { after: 400 }
          }),
          
          // Score section
          new Paragraph({
            text: `Match Score: ${feedback.score}/100`,
            heading: HeadingLevel.HEADING_1,
            spacing: { before: 400, after: 200 }
          }),
          
          new Paragraph({
            children: [
              new TextRun({
                text: `This resume has a ${feedback.score}% match with the job description. `,
                size: 24
              }),
              new TextRun({
                text: feedback.wouldInterview || "",
                size: 24,
                bold: true
              })
            ],
            spacing: { after: 200 }
          }),
          
          // Missing Keywords section
          new Paragraph({
            text: "Missing Keywords",
            heading: HeadingLevel.HEADING_1,
            spacing: { before: 400, after: 200 }
          }),
          
          ...feedback.missingKeywords.map(keyword => 
            new Paragraph({
              text: `â€¢ ${keyword}`,
              spacing: { after: 100 }
            })
          ),
          
          // Section Feedback
          new Paragraph({
            text: "Section-by-Section Feedback",
            heading: HeadingLevel.HEADING_1,
            spacing: { before: 400, after: 200 }
          }),
          
          ...Object.entries(feedback.sectionFeedback).map(([section, content]) => [
            new Paragraph({
              text: section,
              heading: HeadingLevel.HEADING_2,
              spacing: { before: 200, after: 100 }
            }),
            new Paragraph({
              text: content,
              spacing: { after: 100 }
            })
          ]).flat(),
          
          // Bullet Improvements
          new Paragraph({
            text: "Bullet Point Improvements",
            heading: HeadingLevel.HEADING_1,
            spacing: { before: 400, after: 200 }
          }),
          
          ...feedback.weakBullets.map((bullet, index) => [
            new Paragraph({
              text: `Bullet ${index + 1}`,
              heading: HeadingLevel.HEADING_3,
              spacing: { before: 200, after: 100 }
            }),
            new Paragraph({
              children: [new TextRun({ text: "Original:", bold: true })],
              spacing: { after: 100 }
            }),
            new Paragraph({
              text: bullet.original,
              spacing: { after: 200 }
            }),
            new Paragraph({
              children: [new TextRun({ text: "Improved:", bold: true })],
              spacing: { after: 100 }
            }),
            new Paragraph({
              text: bullet.improved,
              spacing: { after: 300 }
            })
          ]).flat(),
          
          // Tone Suggestions
          new Paragraph({
            text: "Tone & Clarity Suggestions",
            heading: HeadingLevel.HEADING_1,
            spacing: { before: 400, after: 200 }
          }),
          
          new Paragraph({
            text: feedback.toneSuggestions,
            spacing: { after: 400 }
          }),
          
          // Footer
          new Paragraph({
            text: "Generated by Matchrate.ai",
            alignment: AlignmentType.CENTER,
            spacing: { before: 800 }
          })
        ]
      }
    ]
  });
  
  return doc;
};
